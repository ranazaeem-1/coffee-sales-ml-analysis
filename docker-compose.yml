version: '3.8'

services:
  # MLflow Tracking Server
  mlflow:
    build: .
    command: mlflow ui --host 0.0.0.0 --port 5000 --backend-store-uri /app/mlruns
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/app/mlruns
      - ./models:/app/models
    environment:
      - MLFLOW_BACKEND_STORE_URI=/app/mlruns
    networks:
      - coffee-ml-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  backend:
    build: .
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/backend
      - ./ml:/app/ml
      - ./models:/app/models
    environment:
      - MODEL_PATH=/app/backend/model.pkl
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    depends_on:
      - mlflow
    networks:
      - coffee-ml-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Streamlit Frontend
  frontend:
    build: .
    command: streamlit run frontend/streamlit_app.py --server.port 8501 --server.address 0.0.0.0
    ports:
      - "8501:8501"
    volumes:
      - ./frontend:/app/frontend
    environment:
      - API_BASE_URL=http://backend:8000
    depends_on:
      - backend
    networks:
      - coffee-ml-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Jupyter Notebook Service (for development)
  jupyter:
    build: .
    command: jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password=''
    ports:
      - "8888:8888"
    volumes:
      - ./ml:/app/ml
      - ./data:/app/data
      - .:/app
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    depends_on:
      - mlflow
    networks:
      - coffee-ml-network

networks:
  coffee-ml-network:
    driver: bridge

volumes:
  mlruns:
  models:
  data:
